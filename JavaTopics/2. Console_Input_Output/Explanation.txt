---------------------------------------------------------------------------------------------------------------------

						//////////////////////////////////////////////////////////////
						//	The standard (non console) way of handling input/output	//	
						//////////////////////////////////////////////////////////////
						
Before java 6 the input/output was usually handled using the class System.in and System.out in the following ways:

1) Using the BufferedReader and InputStreamReader for input and System.out.print - println for output

BufferedReader standardInput
    = new BufferedReader(new InputStreamReader(System.in));
 
System.out.print("Enter your name: ");
String name = standardInput.readLine();
System.out.println("Hello " + name);

Difference between println(), print() and printf()
* print() 	- It prints string inside the quotes.
* println() - It prints string inside the quotes similar like print() method. 
			  Then the cursor moves to the beginning of the next line.
* printf() 	- It provides string formatting (similar to printf in C/C++ programming).

2) 

---------------------------------------------------------------------------------------------------------------------

						//////////////////////////////////////////////////////////////
						//					The System.console Class				//	
						//////////////////////////////////////////////////////////////
						
A new class was introduced in Java 6 called System.console that introduced a new way of handling
input/output. With this class the input/output can be shortened to:

String name = console.readLine("Enter your name: ");
console.printf("Hello %s ", name);

The methods of the console class are the following:

* format(String fmt, Object... args): works same as System.out.format()
* printf(String format, Object... args): works same as System.out.printf()
* readLine() : works same as BufferedReader.readLine()
* readLine(String fmt, Object... args): prints a formatted string and reads input
* readPassword(): reads a password to a char array
* readPassword(String fmt, Object... args): prints a formatted string and reads a password to a char array

It is worth mentioning that the System.console class might not work if the program is running in a 
non-interactive environment such as inside an IDE. So we have to check to ensure that the Console 
is actually available for use:

if (console == null) {
    System.out.println("Console is not supported");
    System.exit(1);
}

For example in the basic intellij setup the console class is null

---------------------------------------------------------------------------------------------------------------------

Source: 
https://www.geeksforgeeks.org/java-io-input-output-in-java-with-examples/
https://www.programiz.com/java-programming/basic-input-output
https://www.codejava.net/java-se/file-io/java-console-input-output-examples